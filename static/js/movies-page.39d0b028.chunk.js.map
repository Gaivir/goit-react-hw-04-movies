{"version":3,"sources":["services/api.js","Components/MoviesList/MoviesList.jsx","styles/base.module.css","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","views/MoviesPage.jsx"],"names":["axios","defaults","baseURL","API_KEY","getTrendingMovie","a","get","res","data","results","getMovieDetails","id","getMovieCast","movieId","cast","getMovieRewiews","movie_id","fetchShowSearch","string","withRouter","movies","location","map","title","to","pathname","routes","state","from","module","exports","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesPage","query","loading","error","searchMovie","setState","FetchApi","then","catch","finally","handleChange","element","currentTarget","handleSubmit","props","history","preventDefault","search","this","slice","onSubmit","className","styles","inputForm","name","type","pattern","required","autoComplete","placeholder","onChange","Component"],"mappings":"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","file":"static/js/movies-page.39d0b028.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\r\nconst API_KEY = `681186281f0908c0103f6be4e5dcc22b`;\r\n\r\nconst getTrendingMovie = async () => {\r\n  const res = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\r\n  return res.data.results;\r\n};\r\n\r\nconst getMovieDetails = async id => {\r\n  const res = await axios.get(`/movie/${id}?api_key=${API_KEY}`);\r\n  return res.data;\r\n};\r\n\r\nconst getMovieCast = async movieId => {\r\n  const res = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\r\n  return res.data.cast;\r\n};\r\n\r\nconst getMovieRewiews = async movie_id => {\r\n  const res = await axios.get(`/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-U`);\r\n  return res.data.results;\r\n};\r\n\r\nconst fetchShowSearch = async string => {\r\n  const res = await axios.get(\r\n    `/search/movie?api_key=${API_KEY}&query=${string}`,\r\n  );\r\n  return res.data.results;\r\n};\r\n\r\n\r\nexport default {\r\n  getTrendingMovie,\r\n  getMovieDetails,\r\n  getMovieCast,\r\n  getMovieRewiews,\r\n  fetchShowSearch,\r\n};","// import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport PropTypes from 'prop-types'\r\n \r\nconst MovieList = ({ movies, location }) => {\r\n  return (\r\n    <ul>\r\n      {movies &&\r\n        movies.map(({ id, title }) => (\r\n            <li key={id}>\r\n            <Link\r\n              to={{\r\n                pathname: `${routes.movies}/${id}`,\r\n                state: {\r\n                  from: location,\r\n                },\r\n              }}\r\n            >\r\n              {title}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n    </ul> \r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default withRouter(MovieList);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputForm\":\"base_inputForm__4Xp0b\",\"PageDetal\":\"base_PageDetal__26weF\"};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { Component } from \"react\";\r\nimport MovieList from '../Components/MoviesList/MoviesList';\r\nimport styles from '../styles/base.module.css';\r\nimport FetchApi from '../services/api';\r\n\r\nexport default class MoviesPage extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        movies: [],\r\n        loading: false,\r\n        error: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.location.search) {\r\n            this.searchMovie(this.props.location.search.slice(7))\r\n        }\r\n    }\r\n\r\n\r\n    searchMovie = query => {\r\n    this.setState({ loading: true });\r\n    FetchApi\r\n      .fetchShowSearch(query)\r\n      .then(movies => this.setState({ movies }))\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  };\r\n\r\n    \r\n\r\n    handleChange = element => {\r\n        this.setState({ query: element.currentTarget.value });\r\n    }\r\n\r\n    handleSubmit = element => {\r\n        const { location, history } = this.props;\r\n        const { query } = this.state;\r\n\r\n        element.preventDefault();\r\n\r\n\r\n        this.searchMovie(query);\r\n        history.push({ ...location, search: `query=${query}` });\r\n        // console.log(this.state.query);\r\n       }\r\n    \r\n\r\n    render() {\r\n        const { query, movies } = this.state;\r\n        \r\n        return (\r\n            <div>\r\n            <form onSubmit={this.handleSubmit} className={styles.inputForm}>\r\n                <input\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Search movies\"\r\n                    value={query}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n                </form>\r\n                <MovieList movies={movies} />\r\n               \r\n            </div>\r\n\r\n        )\r\n    }\r\n}"],"sourceRoot":""}